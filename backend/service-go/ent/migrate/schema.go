// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// TGoCachesColumns holds the columns for the "t_go_caches" table.
	TGoCachesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "cache_key", Type: field.TypeString, Unique: true},
		{Name: "cache_value", Type: field.TypeString, Default: ""},
		{Name: "mtime", Type: field.TypeTime},
		{Name: "ctime", Type: field.TypeTime},
	}
	// TGoCachesTable holds the schema information for the "t_go_caches" table.
	TGoCachesTable = &schema.Table{
		Name:       "t_go_caches",
		Columns:    TGoCachesColumns,
		PrimaryKey: []*schema.Column{TGoCachesColumns[0]},
	}
	// TGoEnsColumns holds the columns for the "t_go_ens" table.
	TGoEnsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "wallet_pub", Type: field.TypeString, Unique: true},
		{Name: "ens", Type: field.TypeString, Default: ""},
		{Name: "mtime", Type: field.TypeTime},
		{Name: "ctime", Type: field.TypeTime},
	}
	// TGoEnsTable holds the schema information for the "t_go_ens" table.
	TGoEnsTable = &schema.Table{
		Name:       "t_go_ens",
		Columns:    TGoEnsColumns,
		PrimaryKey: []*schema.Column{TGoEnsColumns[0]},
	}
	// TGoNftsColumns holds the columns for the "t_go_nfts" table.
	TGoNftsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "wallet_pub", Type: field.TypeString, Default: ""},
		{Name: "rank_type", Type: field.TypeInt, Default: 0},
		{Name: "rank_year", Type: field.TypeInt, Default: 0},
		{Name: "rank_season", Type: field.TypeInt, Default: 0},
		{Name: "rank", Type: field.TypeInt, Default: 0},
		{Name: "mint_tx", Type: field.TypeString, Default: ""},
		{Name: "mtime", Type: field.TypeTime},
		{Name: "ctime", Type: field.TypeTime},
	}
	// TGoNftsTable holds the schema information for the "t_go_nfts" table.
	TGoNftsTable = &schema.Table{
		Name:       "t_go_nfts",
		Columns:    TGoNftsColumns,
		PrimaryKey: []*schema.Column{TGoNftsColumns[0]},
	}
	// TGoRetirementsColumns holds the columns for the "t_go_retirements" table.
	TGoRetirementsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "creation_tx", Type: field.TypeString, Default: ""},
		{Name: "creator_address", Type: field.TypeString, Default: ""},
		{Name: "beneficiary_address", Type: field.TypeString, Default: ""},
		{Name: "amount", Type: field.TypeFloat64, Default: 0},
		{Name: "token_address", Type: field.TypeString, Default: ""},
		{Name: "token_name", Type: field.TypeString, Default: ""},
		{Name: "token_type", Type: field.TypeString, Default: ""},
		{Name: "retirement_message", Type: field.TypeString, Default: ""},
		{Name: "retirement_time", Type: field.TypeTime},
		{Name: "mtime", Type: field.TypeTime},
		{Name: "ctime", Type: field.TypeTime},
	}
	// TGoRetirementsTable holds the schema information for the "t_go_retirements" table.
	TGoRetirementsTable = &schema.Table{
		Name:       "t_go_retirements",
		Columns:    TGoRetirementsColumns,
		PrimaryKey: []*schema.Column{TGoRetirementsColumns[0]},
	}
	// TUsersColumns holds the columns for the "t_users" table.
	TUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "wallet_pub", Type: field.TypeString, Unique: true},
		{Name: "wallet_type", Type: field.TypeString},
		{Name: "uname", Type: field.TypeString},
		{Name: "face", Type: field.TypeString},
		{Name: "gender", Type: field.TypeBool},
		{Name: "twitter", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "about", Type: field.TypeString},
		{Name: "last_login_time", Type: field.TypeTime},
		{Name: "mtime", Type: field.TypeTime},
		{Name: "ctime", Type: field.TypeTime},
	}
	// TUsersTable holds the schema information for the "t_users" table.
	TUsersTable = &schema.Table{
		Name:       "t_users",
		Columns:    TUsersColumns,
		PrimaryKey: []*schema.Column{TUsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		TGoCachesTable,
		TGoEnsTable,
		TGoNftsTable,
		TGoRetirementsTable,
		TUsersTable,
	}
)

func init() {
	TGoCachesTable.Annotation = &entsql.Annotation{
		Table: "t_go_caches",
	}
	TGoEnsTable.Annotation = &entsql.Annotation{
		Table: "t_go_ens",
	}
	TGoNftsTable.Annotation = &entsql.Annotation{
		Table: "t_go_nfts",
	}
	TGoRetirementsTable.Annotation = &entsql.Annotation{
		Table: "t_go_retirements",
	}
	TUsersTable.Annotation = &entsql.Annotation{
		Table:     "t_users",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_0900_ai_ci",
	}
}
